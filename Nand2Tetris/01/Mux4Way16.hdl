// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
   Mux(a=a[0], b=b[0], sel=sel[0], out=res0ab);
    Mux(a=c[0], b=d[0], sel=sel[0], out=res0cd);
    Mux(a=res0ab, b=res0cd, sel=sel[1], out=out[0]);
    Mux(a=a[1], b=b[1], sel=sel[0], out=res1ab);
    Mux(a=c[1], b=d[1], sel=sel[0], out=res1cd);
    Mux(a=res1ab, b=res1cd, sel=sel[1], out=out[1]);
    Mux(a=a[2], b=b[2], sel=sel[0], out=res2ab);
    Mux(a=c[2], b=d[2], sel=sel[0], out=res2cd);
    Mux(a=res2ab, b=res2cd, sel=sel[1], out=out[2]);
    Mux(a=a[3], b=b[3], sel=sel[0], out=res3ab);
    Mux(a=c[3], b=d[3], sel=sel[0], out=res3cd);
    Mux(a=res3ab, b=res3cd, sel=sel[1], out=out[3]);
    Mux(a=a[4], b=b[4], sel=sel[0], out=res4ab);
    Mux(a=c[4], b=d[4], sel=sel[0], out=res4cd);
    Mux(a=res4ab, b=res4cd, sel=sel[1], out=out[4]);
    Mux(a=a[5], b=b[5], sel=sel[0], out=res5ab);
    Mux(a=c[5], b=d[5], sel=sel[0], out=res5cd);
    Mux(a=res5ab, b=res5cd, sel=sel[1], out=out[5]);
    Mux(a=a[6], b=b[6], sel=sel[0], out=res6ab);
    Mux(a=c[6], b=d[6], sel=sel[0], out=res6cd);
    Mux(a=res6ab, b=res6cd, sel=sel[1], out=out[6]);
    Mux(a=a[7], b=b[7], sel=sel[0], out=res7ab);
    Mux(a=c[7], b=d[7], sel=sel[0], out=res7cd);
    Mux(a=res7ab, b=res7cd, sel=sel[1], out=out[7]);
    Mux(a=a[8], b=b[8], sel=sel[0], out=res8ab);
    Mux(a=c[8], b=d[8], sel=sel[0], out=res8cd);
    Mux(a=res8ab, b=res8cd, sel=sel[1], out=out[8]);
    Mux(a=a[9], b=b[9], sel=sel[0], out=res9ab);
    Mux(a=c[9], b=d[9], sel=sel[0], out=res9cd);
    Mux(a=res9ab, b=res9cd, sel=sel[1], out=out[9]);
    Mux(a=a[10], b=b[10], sel=sel[0], out=res10ab);
    Mux(a=c[10], b=d[10], sel=sel[0], out=res10cd);
    Mux(a=res10ab, b=res10cd, sel=sel[1], out=out[10]);
    Mux(a=a[11], b=b[11], sel=sel[0], out=res11ab);
    Mux(a=c[11], b=d[11], sel=sel[0], out=res11cd);
    Mux(a=res11ab, b=res11cd, sel=sel[1], out=out[11]);
    Mux(a=a[12], b=b[12], sel=sel[0], out=res12ab);
    Mux(a=c[12], b=d[12], sel=sel[0], out=res12cd);
    Mux(a=res12ab, b=res12cd, sel=sel[1], out=out[12]);
    Mux(a=a[13], b=b[13], sel=sel[0], out=res13ab);
    Mux(a=c[13], b=d[13], sel=sel[0], out=res13cd);
    Mux(a=res13ab, b=res13cd, sel=sel[1], out=out[13]);
    Mux(a=a[14], b=b[14], sel=sel[0], out=res14ab);
    Mux(a=c[14], b=d[14], sel=sel[0], out=res14cd);
    Mux(a=res14ab, b=res14cd, sel=sel[1], out=out[14]);
    Mux(a=a[15], b=b[15], sel=sel[0], out=res15ab);
    Mux(a=c[15], b=d[15], sel=sel[0], out=res15cd);
    Mux(a=res15ab, b=res15cd, sel=sel[1], out=out[15]);

}